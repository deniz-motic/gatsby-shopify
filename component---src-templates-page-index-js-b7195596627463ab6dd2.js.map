{"version":3,"sources":["webpack:///./src/templates/Page/styles.js","webpack:///./src/templates/Page/index.js","webpack:///./node_modules/lodash/find.js","webpack:///./node_modules/lodash/_baseFindIndex.js","webpack:///./node_modules/lodash/toInteger.js","webpack:///./node_modules/lodash/findIndex.js","webpack:///./node_modules/lodash/_createFind.js","webpack:///./node_modules/lodash/isEqual.js","webpack:///./node_modules/lodash/toFinite.js","webpack:///./src/components/ProductForm/index.js","webpack:///./src/templates/ProductPage/styles.js","webpack:///./node_modules/lodash/toNumber.js"],"names":["styled","h1","div","query","Page","page","data","shopifyPage","body","title","description","Container","dangerouslySetInnerHTML","__html","find","createFind","module","exports","array","predicate","fromIndex","fromRight","length","index","toFinite","value","result","remainder","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","max","isArrayLike","keys","findIndexFunc","collection","iterable","Object","iteratee","key","undefined","baseIsEqual","other","toNumber","ProductForm","product","options","variants","initialVariant","minVariantPrice","priceRange","useState","variant","setVariant","quantity","setQuantity","useContext","StoreContext","addVariantToCart","store","client","adding","productVariant","helpers","variantForOptions","availableForSale","available","setAvailable","checkAvailability","useCallback","productId","fetch","then","fetchedProduct","filter","id","shopifyId","useEffect","checkDisabled","name","match","selectedOptions","price","Intl","NumberFormat","currency","currencyCode","minimumFractionDigits","style","format","descriptionItems","descriptionHtml","split","map","values","Fragment","htmlFor","onChange","event","optionIndex","target","currentOptions","selectedVariant","isEqual","handleOptionChange","className","disabled","type","min","step","onClick","ProductTitle","ProductDescription","isObject","isSymbol","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","valueOf","replace","isBinary","test","slice"],"mappings":"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","file":"component---src-templates-page-index-js-b7195596627463ab6dd2.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const ProductTitle = styled.h1`\r\n  font-size: 2.25rem;\r\n  margin-bottom: 15px;\r\n  word-wrap: break-word;\r\n  font-family: \"Helvetica\",\"Helvetica\",sans-serif;\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  margin: 0 0 0.5rem;\r\n  line-height: 1.4;\r\n`\r\n\r\nexport const ProductDescription = styled.div`\r\n  margin-top: 40px;\r\n  font-family: \"Helvetica\",\"Helvetica\",sans-serif;\r\n  font-weight: 300;\r\n`","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport SEO from '~/components/seo'\r\nimport ProductForm from '~/components/ProductForm'\r\nimport {\r\n    Img,\r\n    TwoColumnGrid,\r\n    GridLeft,\r\n    GridRight,\r\n} from '~/utils/styles'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\n\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport {\r\n    ProductTitle,\r\n    ProductDescription\r\n} from './styles'\r\n\r\n//TODO: Change to ProductCarousel and have product images as carousel indicators\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n//import ProductCarousel from '~/components/ProductCarousel'\r\n\r\n\r\nconst Page = ({ data }) => {\r\n    const page = data.shopifyPage\r\n    const body = page.body\r\n\r\n    return (\r\n        <>\r\n            <SEO title={page.title} description={page.title} />\r\n            <Container>\r\n                <div dangerouslySetInnerHTML={{__html: body}}>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const query = graphql`\r\n    query($handle: String!) {\r\n        shopifyPage(handle: { eq: $handle }) {\r\n            id\r\n            title\r\n            handle\r\n            body\r\n            bodySummary\r\n        }\r\n    }\r\n`\r\n\r\nexport default Page\r\n","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = baseFindIndex;","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","import React, { useState, useContext, useEffect, useCallback } from 'react'\nimport find from 'lodash/find'\nimport isEqual from 'lodash/isEqual'\nimport PropTypes from 'prop-types'\nimport Button from 'react-bootstrap/Button'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\nimport {Row, Col} from 'react-bootstrap'\n\nimport StoreContext from '~/context/StoreContext'\n\nimport {\n    ProductTitle,\n    ProductDescription\n} from '../../templates/ProductPage/styles'\n\nconst ProductForm = ({ product }) => {\n  const {\n    options,\n    variants,\n    variants: [initialVariant],\n    priceRange: { minVariantPrice },\n  } = product\n  const [variant, setVariant] = useState({ ...initialVariant })\n  const [quantity, setQuantity] = useState(1)\n  const {\n    addVariantToCart,\n    store: { client, adding },\n  } = useContext(StoreContext)\n\n  const productVariant =\n    client.product.helpers.variantForOptions(product, variant) || variant\n  const [available, setAvailable] = useState(productVariant.availableForSale)\n\n  const checkAvailability = useCallback(\n    productId => {\n      client.product.fetch(productId).then(fetchedProduct => {\n        // this checks the currently selected variant for availability\n        const result = fetchedProduct.variants.filter(\n          variant => variant.id === productVariant.shopifyId\n        )\n        if (result.length > 0) {\n          setAvailable(result[0].available)\n        }\n      })\n    },\n    [client.product, productVariant.shopifyId, variants]\n  )\n\n  useEffect(() => {\n    checkAvailability(product.shopifyId)\n  }, [productVariant, checkAvailability, product.shopifyId])\n\n  const handleQuantityChange = ({ target }) => {\n    setQuantity(target.value)\n  }\n\n  const handleOptionChange = (optionIndex, { target }) => {\n    const { value } = target\n    const currentOptions = [...variant.selectedOptions]\n\n    currentOptions[optionIndex] = {\n      ...currentOptions[optionIndex],\n      value,\n    }\n\n    const selectedVariant = find(variants, ({ selectedOptions }) =>\n      isEqual(currentOptions, selectedOptions)\n    )\n\n    setVariant({ ...selectedVariant })\n  }\n\n  const handleAddToCart = () => {\n    addVariantToCart(productVariant.shopifyId, quantity)\n  }\n\n  /* \n  Using this in conjunction with a select input for variants \n  can cause a bug where the buy button is disabled, this \n  happens when only one variant is available and it's not the\n  first one in the dropdown list. I didn't feel like putting \n  in time to fix this since its an edge case and most people\n  wouldn't want to use dropdown styled selector anyways - \n  at least if the have a sense for good design lol.\n  */\n  const checkDisabled = (name, value) => {\n    const match = find(variants, {\n      selectedOptions: [\n        {\n          name: name,\n          value: value,\n        },\n      ],\n    })\n    if (match === undefined) return true\n    if (match.availableForSale === true) return false\n    return true\n  }\n\n  const price = Intl.NumberFormat(undefined, {\n    currency: minVariantPrice.currencyCode,\n    minimumFractionDigits: 2,\n    style: 'currency',\n  }).format(variant.price)\n\n    //TODO: Split product description on <h6> and put into tabs\n\n    const descriptionItems = product.descriptionHtml.split(\"<h6>\");\n\n  return (\n    <>\n      <h3>{price}</h3>\n\n      <ProductDescription\n        dangerouslySetInnerHTML={{ __html: descriptionItems[0] }}\n        />\n\n      {options.map(({ id, name, values }, index) => (\n        <React.Fragment key={id}>\n          <label htmlFor={name}>{name} </label>\n          <select\n            name={name}\n            key={id}\n            onChange={event => handleOptionChange(index, event)}\n            className={'form-control custom-select border rounded w-100 px-2'}\n          >\n            {values.map(value => (\n              <option\n                value={value}\n                key={`${name}-${value}`}\n                disabled={checkDisabled(name, value)}\n              >\n                {value}\n              </option>\n            ))}\n          </select>\n          <br />\n        </React.Fragment>\n      ))}\n      <label htmlFor=\"quantity\">Quantity </label>\n      <input\n        type=\"number\"\n        id=\"quantity\"\n        name=\"quantity\"\n        min=\"1\"\n        step=\"1\"\n        onChange={handleQuantityChange}\n        value={quantity}\n        className={'form-control border rounded w-100'}\n      />\n      <br />\n    <Button\n        type=\"submit\"\n        disabled={!available || adding}\n        onClick={handleAddToCart}\n        className=\"btn-danger\"\n        >\n    Add to Cart\n        </Button>\n      {!available && <p>This Product is out of Stock!</p>}\n\n    </>\n  )\n}\n\nProductForm.propTypes = {\n  product: PropTypes.shape({\n    descriptionHtml: PropTypes.string,\n    handle: PropTypes.string,\n    id: PropTypes.string,\n    shopifyId: PropTypes.string,\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        originalSrc: PropTypes.string,\n      })\n    ),\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        values: PropTypes.arrayOf(PropTypes.string),\n      })\n    ),\n    productType: PropTypes.string,\n    title: PropTypes.string,\n    variants: PropTypes.arrayOf(\n      PropTypes.shape({\n        availableForSale: PropTypes.bool,\n        id: PropTypes.string,\n        price: PropTypes.string,\n        title: PropTypes.string,\n        shopifyId: PropTypes.string,\n        selectedOptions: PropTypes.arrayOf(\n          PropTypes.shape({\n            name: PropTypes.string,\n            value: PropTypes.string,\n          })\n        ),\n      })\n    ),\n  }),\n  addVariantToCart: PropTypes.func,\n}\n\nexport default ProductForm\n","import styled from '@emotion/styled'\n\nexport const ProductTitle = styled.h1`\n  font-size: 2.25rem;\n  margin-bottom: 15px;\n  word-wrap: break-word;\n  font-family: \"Helvetica\",\"Helvetica\",sans-serif;\n  font-weight: 400;\n  text-transform: uppercase;\n  margin: 0 0 0.5rem;\n  line-height: 1.4;\n`\n\nexport const ProductDescription = styled.div`\n  margin-top: 40px;\n  font-family: \"Helvetica\",\"Helvetica\",sans-serif;\n  font-weight: 300;\n`","require(\"core-js/modules/es6.regexp.replace\");\n\nvar isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;"],"sourceRoot":""}